<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnModifcarUsuario.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>